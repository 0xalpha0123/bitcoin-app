{"version":3,"sources":["../../src/ios/Permissions.ts"],"names":["withPermissions","config","permissions","modResults","applyPermissions","infoPlist","entries","Object","length","permission","description","existingPermission"],"mappings":";;;;;;;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMA,eAA4D,GAAG,CAC1EC,MAD0E,EAE1EC,WAF0E,KAGvE;AACH,SAAO,iCAAcD,MAAd,EAAsB,MAAMA,MAAN,IAAgB;AAC3CA,IAAAA,MAAM,CAACE,UAAP,GAAoBC,gBAAgB,CAACF,WAAD,EAAcD,MAAM,CAACE,UAArB,CAApC;AACA,WAAOF,MAAP;AACD,GAHM,CAAP;AAID,CARM;;;;AAUA,SAASG,gBAAT,CACLF,WADK,EAELG,SAFK,EAGM;AACX,QAAMC,OAAO,GAAGC,MAAM,CAACD,OAAP,CAAeJ,WAAf,CAAhB;;AACA,MAAII,OAAO,CAACE,MAAR,KAAmB,CAAvB,EAA0B,CACxB;AACA;AACD;;AACD,OAAK,MAAM,CAACC,UAAD,EAAaC,WAAb,CAAX,IAAwCJ,OAAxC,EAAiD;AAC/C,QAAII,WAAW,IAAI,IAAnB,EAAyB;AACvB,aAAOL,SAAS,CAACI,UAAD,CAAhB;AACD,KAFD,MAEO;AACL,YAAME,kBAAkB,GAAGN,SAAS,CAACI,UAAD,CAApC;;AACA,UAAIE,kBAAkB,IAAIA,kBAAkB,KAAKD,WAAjD,EAA8D,CAC5D;AACA;AACA;AACA;AACD;;AACDL,MAAAA,SAAS,CAACI,UAAD,CAAT,GAAwBC,WAAxB;AACD;AACF;;AACD,SAAOL,SAAP;AACD","sourcesContent":["import { ConfigPlugin } from '../Plugin.types';\nimport { withInfoPlist } from '../plugins/ios-plugins';\nimport { InfoPlist } from './IosConfig.types';\n\n/**\n * Apply permissions and their respective descriptions to the iOS Info.plist.\n * Providing a null description will remove the permission from the Info.plist.\n *\n * @param config\n * @param permissions record of strings where the key matches Info.plist permissions and the values are the permission descriptions.\n */\nexport const withPermissions: ConfigPlugin<Record<string, string | null>> = (\n  config,\n  permissions\n) => {\n  return withInfoPlist(config, async config => {\n    config.modResults = applyPermissions(permissions, config.modResults);\n    return config;\n  });\n};\n\nexport function applyPermissions(\n  permissions: Record<string, string | null>,\n  infoPlist: Record<string, any>\n): InfoPlist {\n  const entries = Object.entries(permissions);\n  if (entries.length === 0) {\n    // TODO: Debug warn\n    // console.warn('[withPermissions] no permissions were provided');\n  }\n  for (const [permission, description] of entries) {\n    if (description == null) {\n      delete infoPlist[permission];\n    } else {\n      const existingPermission = infoPlist[permission];\n      if (existingPermission && existingPermission !== description) {\n        // TODO: Debug warn\n        //   console.warn(\n        //     `[withPermissionsIos][conflict] permission \"${permission}\" is already defined in the Info.plist with description \"${existingPermission}\"`\n        //   );\n      }\n      infoPlist[permission] = description;\n    }\n  }\n  return infoPlist;\n}\n"],"file":"Permissions.js"}