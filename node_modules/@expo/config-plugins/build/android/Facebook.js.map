{"version":3,"sources":["../../src/android/Facebook.ts"],"names":["CUSTOM_TAB_ACTIVITY","STRING_FACEBOOK_APP_ID","META_APP_ID","META_APP_NAME","META_AUTO_INIT","META_AUTO_LOG_APP_EVENTS","META_AD_ID_COLLECTION","withFacebookAppIdString","applyFacebookAppIdString","withFacebookManifest","setFacebookConfig","buildXMLItem","head","children","$","buildAndroidItem","datum","item","name","getFacebookSchemeActivity","scheme","exported","action","category","data","getFacebookScheme","config","facebookScheme","getFacebookAppId","facebookAppId","getFacebookDisplayName","facebookDisplayName","getFacebookAutoInitEnabled","facebookAutoInitEnabled","getFacebookAutoLogAppEvents","facebookAutoLogAppEventsEnabled","getFacebookAdvertiserIDCollection","facebookAdvertiserIDCollectionEnabled","ensureFacebookActivity","mainApplication","Array","isArray","activity","filter","push","setFacebookAppIdString","projectRoot","stringsPath","stringsJSON","path","xml","Error","appId","value","androidManifest","displayName","autoInitEnabled","autoLogAppEvents","advertiserIdCollection"],"mappings":"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","sourcesContent":["import { ExpoConfig } from '@expo/config-types';\nimport assert from 'assert';\n\nimport { createAndroidManifestPlugin, createStringsXmlPlugin } from '../plugins/android-plugins';\nimport { writeXMLAsync } from '../utils/XML';\nimport {\n  addMetaDataItemToMainApplication,\n  AndroidManifest,\n  getMainApplicationOrThrow,\n  ManifestActivity,\n  ManifestApplication,\n  prefixAndroidKeys,\n  removeMetaDataItemFromMainApplication,\n} from './Manifest';\nimport { buildResourceItem, readResourcesXMLAsync, ResourceXML } from './Resources';\nimport { getProjectStringsXMLPathAsync, removeStringItem, setStringItem } from './Strings';\n\nconst CUSTOM_TAB_ACTIVITY = 'com.facebook.CustomTabActivity';\nconst STRING_FACEBOOK_APP_ID = 'facebook_app_id';\nconst META_APP_ID = 'com.facebook.sdk.ApplicationId';\nconst META_APP_NAME = 'com.facebook.sdk.ApplicationName';\nconst META_AUTO_INIT = 'com.facebook.sdk.AutoInitEnabled';\nconst META_AUTO_LOG_APP_EVENTS = 'com.facebook.sdk.AutoLogAppEventsEnabled';\nconst META_AD_ID_COLLECTION = 'com.facebook.sdk.AdvertiserIDCollectionEnabled';\n\nexport const withFacebookAppIdString = createStringsXmlPlugin(\n  applyFacebookAppIdString,\n  'withFacebookAppIdString'\n);\nexport const withFacebookManifest = createAndroidManifestPlugin(\n  setFacebookConfig,\n  'withFacebookManifest'\n);\n\nfunction buildXMLItem({\n  head,\n  children,\n}: {\n  head: Record<string, string>;\n  children?: Record<string, string | any[]>;\n}) {\n  return { ...(children ?? {}), $: head };\n}\n\nfunction buildAndroidItem(datum: string | Record<string, any>) {\n  const item = typeof datum === 'string' ? { name: datum } : datum;\n  const head = prefixAndroidKeys(item);\n  return buildXMLItem({ head });\n}\n\nfunction getFacebookSchemeActivity(scheme: string) {\n  /**\n <activity\n    android:name=\"com.facebook.CustomTabActivity\"\n    android:exported=\"true\">\n    <intent-filter>\n        <action android:name=\"android.intent.action.VIEW\" />\n        <category android:name=\"android.intent.category.DEFAULT\" />\n        <category android:name=\"android.intent.category.BROWSABLE\" />\n        <data android:scheme=\"${scheme}\" />\n    </intent-filter>\n</activity>\n   */\n  return buildXMLItem({\n    head: prefixAndroidKeys({\n      name: CUSTOM_TAB_ACTIVITY,\n      exported: 'true',\n    }),\n    children: {\n      'intent-filter': [\n        {\n          action: [buildAndroidItem('android.intent.action.VIEW')],\n          category: [\n            buildAndroidItem('android.intent.category.DEFAULT'),\n            buildAndroidItem('android.intent.category.BROWSABLE'),\n          ],\n          data: [buildAndroidItem({ scheme })],\n        },\n      ],\n    },\n  }) as ManifestActivity;\n}\n\ntype ExpoConfigFacebook = Pick<\n  ExpoConfig,\n  | 'facebookScheme'\n  | 'facebookAdvertiserIDCollectionEnabled'\n  | 'facebookAppId'\n  | 'facebookAutoInitEnabled'\n  | 'facebookAutoLogAppEventsEnabled'\n  | 'facebookDisplayName'\n>;\n\nexport function getFacebookScheme(config: ExpoConfigFacebook) {\n  return config.facebookScheme ?? null;\n}\n\nexport function getFacebookAppId(config: ExpoConfigFacebook) {\n  return config.facebookAppId ?? null;\n}\n\nexport function getFacebookDisplayName(config: ExpoConfigFacebook) {\n  return config.facebookDisplayName ?? null;\n}\nexport function getFacebookAutoInitEnabled(config: ExpoConfigFacebook) {\n  return config.facebookAutoInitEnabled ?? null;\n}\n\nexport function getFacebookAutoLogAppEvents(config: ExpoConfigFacebook) {\n  return config.facebookAutoLogAppEventsEnabled ?? null;\n}\n\nexport function getFacebookAdvertiserIDCollection(config: ExpoConfigFacebook) {\n  return config.facebookAdvertiserIDCollectionEnabled ?? null;\n}\n\nfunction ensureFacebookActivity({\n  mainApplication,\n  scheme,\n}: {\n  mainApplication: ManifestApplication;\n  scheme: string | null;\n}) {\n  if (Array.isArray(mainApplication.activity)) {\n    // Remove all Facebook CustomTabActivities first\n    mainApplication.activity = mainApplication.activity.filter(activity => {\n      return activity.$?.['android:name'] !== CUSTOM_TAB_ACTIVITY;\n    });\n  } else {\n    mainApplication.activity = [];\n  }\n\n  // If a new scheme is defined, append it to the activity.\n  if (scheme) {\n    mainApplication.activity.push(getFacebookSchemeActivity(scheme));\n  }\n  return mainApplication;\n}\n\nexport async function setFacebookAppIdString(config: ExpoConfigFacebook, projectRoot: string) {\n  const stringsPath = await getProjectStringsXMLPathAsync(projectRoot);\n  assert(stringsPath, `There was a problem setting your Facebook App ID in \"${stringsPath}\"`);\n\n  let stringsJSON = await readResourcesXMLAsync({ path: stringsPath });\n  stringsJSON = applyFacebookAppIdString(config, stringsJSON);\n\n  try {\n    await writeXMLAsync({ path: stringsPath, xml: stringsJSON });\n  } catch {\n    throw new Error(`Error setting facebookAppId. Cannot write strings.xml to \"${stringsPath}\"`);\n  }\n  return true;\n}\n\nfunction applyFacebookAppIdString(config: ExpoConfigFacebook, stringsJSON: ResourceXML) {\n  const appId = getFacebookAppId(config);\n\n  if (appId) {\n    return setStringItem(\n      [buildResourceItem({ name: STRING_FACEBOOK_APP_ID, value: appId })],\n      stringsJSON\n    );\n  }\n  return removeStringItem(STRING_FACEBOOK_APP_ID, stringsJSON);\n}\n\nexport function setFacebookConfig(config: ExpoConfigFacebook, androidManifest: AndroidManifest) {\n  const scheme = getFacebookScheme(config);\n\n  const appId = getFacebookAppId(config);\n  const displayName = getFacebookDisplayName(config);\n  const autoInitEnabled = getFacebookAutoInitEnabled(config);\n  const autoLogAppEvents = getFacebookAutoLogAppEvents(config);\n  const advertiserIdCollection = getFacebookAdvertiserIDCollection(config);\n\n  let mainApplication = getMainApplicationOrThrow(androidManifest);\n\n  mainApplication = ensureFacebookActivity({ scheme, mainApplication });\n\n  if (appId) {\n    mainApplication = addMetaDataItemToMainApplication(\n      mainApplication,\n      META_APP_ID,\n      // The corresponding string is set in setFacebookAppIdString\n      `@string/${STRING_FACEBOOK_APP_ID}`\n    );\n  } else {\n    mainApplication = removeMetaDataItemFromMainApplication(mainApplication, META_APP_ID);\n  }\n  if (displayName) {\n    mainApplication = addMetaDataItemToMainApplication(mainApplication, META_APP_NAME, displayName);\n  } else {\n    mainApplication = removeMetaDataItemFromMainApplication(mainApplication, META_APP_NAME);\n  }\n  if (autoInitEnabled !== null) {\n    mainApplication = addMetaDataItemToMainApplication(\n      mainApplication,\n      META_AUTO_INIT,\n      autoInitEnabled ? 'true' : 'false'\n    );\n  } else {\n    mainApplication = removeMetaDataItemFromMainApplication(mainApplication, META_AUTO_INIT);\n  }\n  if (autoLogAppEvents !== null) {\n    mainApplication = addMetaDataItemToMainApplication(\n      mainApplication,\n      META_AUTO_LOG_APP_EVENTS,\n      autoLogAppEvents ? 'true' : 'false'\n    );\n  } else {\n    mainApplication = removeMetaDataItemFromMainApplication(\n      mainApplication,\n      META_AUTO_LOG_APP_EVENTS\n    );\n  }\n  if (advertiserIdCollection !== null) {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    mainApplication = addMetaDataItemToMainApplication(\n      mainApplication,\n      META_AD_ID_COLLECTION,\n      advertiserIdCollection ? 'true' : 'false'\n    );\n  } else {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    mainApplication = removeMetaDataItemFromMainApplication(mainApplication, META_AD_ID_COLLECTION);\n  }\n\n  return androidManifest;\n}\n"],"file":"Facebook.js"}